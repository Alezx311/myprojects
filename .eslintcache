[{"C:\\Programming\\myprojects\\src\\index.js":"1","C:\\Programming\\myprojects\\src\\App.js":"2","C:\\Programming\\myprojects\\src\\store\\reducers.js":"3","C:\\Programming\\myprojects\\src\\store\\types.js":"4","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\index.js":"5","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\View.js":"6","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\Setup.js":"7","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\List.js":"8","C:\\Programming\\myprojects\\src\\store\\actions.js":"9","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\ListElements.js":"10","C:\\Programming\\myprojects\\src\\components\\constants.js":"11","C:\\Programming\\myprojects\\src\\components\\reactHelpers.js":"12","C:\\Programming\\myprojects\\src\\components\\converters.js":"13","C:\\Programming\\myprojects\\src\\components\\GuitarFretboard\\index.js":"14","C:\\Programming\\myprojects\\src\\components\\toneHelpers.js":"15","C:\\Programming\\myprojects\\src\\components\\random.js":"16","C:\\Programming\\myprojects\\src\\components\\teoriaHelpers.js":"17","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\Player.js":"18","C:\\Programming\\myprojects\\src\\components\\toneInstruments.js":"19","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\Helpers.js":"20"},{"size":533,"mtime":1611790715148,"results":"21","hashOfConfig":"22"},{"size":489,"mtime":1611816760669,"results":"23","hashOfConfig":"22"},{"size":2033,"mtime":1611835593507,"results":"24","hashOfConfig":"22"},{"size":284,"mtime":1611777366644,"results":"25","hashOfConfig":"22"},{"size":467,"mtime":1611817433783,"results":"26","hashOfConfig":"22"},{"size":2372,"mtime":1611827548455,"results":"27","hashOfConfig":"22"},{"size":2600,"mtime":1611802776117,"results":"28","hashOfConfig":"22"},{"size":1888,"mtime":1611799182433,"results":"29","hashOfConfig":"22"},{"size":474,"mtime":1611778738161,"results":"30","hashOfConfig":"22"},{"size":1636,"mtime":1611765329806,"results":"31","hashOfConfig":"22"},{"size":14360,"mtime":1611774229190,"results":"32","hashOfConfig":"22"},{"size":475,"mtime":1611758191336,"results":"33","hashOfConfig":"22"},{"size":1264,"mtime":1611024000669,"results":"34","hashOfConfig":"22"},{"size":3267,"mtime":1611819983909,"results":"35","hashOfConfig":"22"},{"size":2483,"mtime":1611073950777,"results":"36","hashOfConfig":"22"},{"size":3439,"mtime":1611065921374,"results":"37","hashOfConfig":"22"},{"size":169,"mtime":1611024016453,"results":"38","hashOfConfig":"22"},{"size":1707,"mtime":1611827741833,"results":"39","hashOfConfig":"22"},{"size":15493,"mtime":1611066662206,"results":"40","hashOfConfig":"22"},{"size":6649,"mtime":1611835495202,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1uqnke4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"C:\\Programming\\myprojects\\src\\index.js",[],["89","90"],"C:\\Programming\\myprojects\\src\\App.js",[],"C:\\Programming\\myprojects\\src\\store\\reducers.js",[],"C:\\Programming\\myprojects\\src\\store\\types.js",[],"C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\index.js",["91"],"import React from 'react'\r\n\r\nimport Setup from './Setup'\r\nimport View from './View'\r\nimport List from './List'\r\nimport Player from './Player'\r\n\r\nconst MelodyGenerator = () => (\r\n  <div className=\"col\">\r\n    <div className=\"row\">\r\n      <Setup />\r\n    </div>\r\n    <div className=\"row\">\r\n      <Player />\r\n    </div>\r\n    <div className=\"row\">{/* <View /> */}</div>\r\n    <div className=\"row\">\r\n      <List />\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default MelodyGenerator\r\n","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\View.js",["92","93","94","95"],"import React from 'react'\r\nimport ReactJson from 'react-json-view'\r\nimport Sketch from 'react-p5'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst CanvasValues = {\r\n  width: 500,\r\n  height: 500,\r\n  // notesExample: ['c', 'f', 'bb', 'g', 'f', 'c', 'bb', 'c', 'f', 'f'],\r\n  notesExample: ['a', 'ab', 'b', 'bb', 'c', 'd', 'db', 'e', 'eb', 'f', 'g', 'gb'],\r\n  notesColors: {\r\n    a: '#00ff00',\r\n    ab: '#8000ff',\r\n    b: '#00ffff',\r\n    bb: '#ff80c0',\r\n    c: '#ff0000',\r\n    d: '#ffff00',\r\n    db: '#ff00ff',\r\n    e: '#0080c0',\r\n    eb: '#808080',\r\n    f: '#800000',\r\n    g: '#ff8000',\r\n    gb: '#8080c0'\r\n  }\r\n}\r\nconst noteToColor = note => CanvasValues.notesColors?.[note] ?? '#808000'\r\n\r\nconst ViewSketch = ({ size = 300 }) => {\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(size, size).parent(canvasParentRef)\r\n  }\r\n\r\n  const draw = p5 => {\r\n    const { width, height, figureWidth, figureHeight, notesExample, notesColors } = CanvasValues\r\n    const noteElementSize = width / notesExample.length\r\n\r\n    p5.background(0)\r\n\r\n    notesExample.map((v, i) => {\r\n      let posX = noteElementSize * i + noteElementSize / 2\r\n      let posY = height / 2\r\n      const color = noteToColor(v)\r\n\r\n      // posY = Math.random() > 0.5 ? posY + ~~(Math.random() * 10) : posY - ~~(Math.random() * 10)\r\n      p5.ellipse(posX, posY, noteElementSize, noteElementSize).fill(color)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center align-middle\">\r\n      <Sketch setup={setup} draw={draw} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ViewPlayer = () => {\r\n  const { player } = useSelector(state => state)\r\n  return (\r\n    <div className=\"col\">\r\n      <label>Player</label>\r\n      <ReactJson src={player.melody?.mainNotes} />\r\n    </div>\r\n  )\r\n}\r\nconst ViewSound = () => {\r\n  const { sound } = useSelector(state => state)\r\n  return (\r\n    <div className=\"col\">\r\n      <label>Sound</label>\r\n      <ReactJson src={sound} />\r\n    </div>\r\n  )\r\n}\r\nconst ViewFretboard = () => {\r\n  const { fretboard } = useSelector(state => state)\r\n  return (\r\n    <div className=\"col\">\r\n      <label>Fretboard</label>\r\n      <ReactJson src={fretboard} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst View = () => (\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      <ViewPlayer />\r\n      <ViewSound />\r\n      <ViewFretboard />\r\n      <ViewSketch />\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default View\r\n","C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\Setup.js",[],"C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\List.js",[],"C:\\Programming\\myprojects\\src\\store\\actions.js",[],"C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\ListElements.js",[],["96","97"],"C:\\Programming\\myprojects\\src\\components\\constants.js",[],"C:\\Programming\\myprojects\\src\\components\\reactHelpers.js",[],"C:\\Programming\\myprojects\\src\\components\\converters.js",[],["98","99"],"C:\\Programming\\myprojects\\src\\components\\GuitarFretboard\\index.js",[],"C:\\Programming\\myprojects\\src\\components\\toneHelpers.js",[],"C:\\Programming\\myprojects\\src\\components\\random.js",[],["100","101"],"C:\\Programming\\myprojects\\src\\components\\teoriaHelpers.js",[],"C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\Player.js",[],"C:\\Programming\\myprojects\\src\\components\\toneInstruments.js",["102","103","104","105","106"],"C:\\Programming\\myprojects\\src\\components\\MelodyGenerator\\Helpers.js",["107","108","109"],"import * as Teoria from 'teoria'\r\nimport * as Tone from 'tone'\r\nimport * as TotalSerializm from 'total-serialism'\r\n\r\nexport const NOTES = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'F', 'E', 'E#', 'G', 'G#']\r\nexport const SCALES = [\r\n  'major',\r\n  'minor',\r\n  'ionian',\r\n  'dorian',\r\n  'phrygian',\r\n  'lydian',\r\n  'mixolydian',\r\n  'aeolian',\r\n  'locrian',\r\n  'majorpentatonic',\r\n  'minorpentatonic',\r\n  'chromatic',\r\n  'harmonicchromatic',\r\n  'blues',\r\n  'doubleharmonic',\r\n  'flamenco',\r\n  'harmonicminor',\r\n  'melodicminor',\r\n  'wholetone'\r\n]\r\nexport const SCALES_SHORT = [\r\n  'major',\r\n  'minor',\r\n  'majorpentatonic',\r\n  'minorpentatonic',\r\n  'blues',\r\n  'harmonicminor',\r\n  'melodicminor'\r\n]\r\nexport const TUNINGS = {\r\n  'E Standart': ['E2', 'A2', 'D3', 'G3', 'B4', 'E4'],\r\n  'Drop D': ['D2', 'A2', 'D3', 'G3', 'B4', 'E4'],\r\n  'Drop C': ['C2', 'G2', 'C3', 'F3', 'A4', 'D4'],\r\n  'Drop B': ['B2', 'F#2', 'B3', 'E3', 'G#3', 'C#4']\r\n}\r\n\r\nexport const randomRange = () => Math.random()\r\nexport const randomNumber = (max = 100, min = 0) => ~~(min + randomRange() * (max - min))\r\nexport const randomPowerOfTwo = (max = 5) => 2 ** randomNumber(max, 2)\r\nexport const randomArrayElement = arr => (arr.length ? arr[randomNumber(arr.length)] : null)\r\nexport const randomBoolean = () => randomNumber() > 50\r\nexport const randomArrayShuffle = arr => arr.sort((a, b) => (randomBoolean() ? 1 : -1))\r\nexport const randomArrayElementChange = arr => {\r\n  const el = randomArrayElement(arr)\r\n  const ind = randomNumber(arr.length)\r\n  arr[ind] = el\r\n  return arr\r\n}\r\nexport const randomArrayElementDoubled = arr => {\r\n  const { note, velocity } = randomArrayElement(arr) ?? { note: 'c2', duration: '4n' }\r\n  const ind = randomNumber(arr.length)\r\n  arr[ind] = [[{ note, velocity, duration: '16n' }], [{ note, velocity, duration: '16n' }]]\r\n  return arr\r\n}\r\nexport const randomDurationSymbol = (durations = ['n', 'n']) => randomArrayElement(durations)\r\n\r\nexport const randomScale = () => randomArrayElement(SCALES)\r\n\r\nexport const randomBpm = () => randomNumber(170, 130)\r\n\r\nexport const randomDuration = () => `${randomPowerOfTwo(4)}${randomDurationSymbol()}`\r\n\r\nexport const randomNoteAndOctave = (notesArray = NOTES, octave = 2) =>\r\n  `${randomArrayElement(notesArray)}${randomNumber(octave + 2, octave)}`\r\n\r\nexport const randomNoteObject = (notesArray = NOTES, octave = 2) => {\r\n  const note = randomArrayElement(notesArray)\r\n  return {\r\n    note,\r\n    noteBass: `${note}2`,\r\n    noteDrum: `${note}1`,\r\n    noteSynth: `${note}${randomNumber(5, octave)}`,\r\n    duration: randomDuration(),\r\n    velocity: randomRange()\r\n  }\r\n}\r\n\r\nexport const splitNoteAndOctave = str => {\r\n  const note = str.match(/[a-g]+/i)?.[1] ?? null\r\n  const octave = str.match(/[0-9]+/i)?.[1] ?? null\r\n  return { note, octave }\r\n}\r\n\r\nexport const objStat = obj => Object.entries(obj).reduce((acc, val) => (acc += `\\n${val.join(' -> ')}`), '')\r\n\r\nexport const randomNumbers = (max = 100) =>\r\n  Array(100)\r\n    .fill(1)\r\n    .map(v => randomNumber(max))\r\n\r\nexport const randomMelody = ({ key, scale, octave, size, parts }) => {\r\n  const mainNote = `${key}${octave}`\r\n  const Note = Teoria.note(mainNote)\r\n  const Scale = Note.scale(scale).simple()\r\n\r\n  const mainNotes = Array(size)\r\n    .fill(1)\r\n    .map(v => randomNoteObject(Scale, octave))\r\n    .map(v => {\r\n      if (randomRange() > 0.7) {\r\n        return [v, v]\r\n      } else {\r\n        return v\r\n      }\r\n    })\r\n\r\n  const melodyBass = [...mainNotes]\r\n  const melodyDrum = mainNotes.map(v => {\r\n    const range = randomRange()\r\n    if (range > 0.7) {\r\n      return [v, v]\r\n    } else {\r\n      return v\r\n    }\r\n    // } else if (range > 0.3) {\r\n    //   return randomArrayElement(mainNotes)\r\n    // } else {\r\n    //   return v\r\n    // }\r\n  })\r\n  const melodyPart = mainNotes.map(v => {\r\n    const range = randomRange()\r\n    if (range > 0.7) {\r\n      return [v, v]\r\n    } else if (range > 0.3) {\r\n      // return v\r\n      return randomArrayElement(mainNotes)\r\n    } else {\r\n      return v\r\n    }\r\n  })\r\n  const melodyBassFull = Array(parts)\r\n    .fill(melodyBass)\r\n    .reduce((acc, val) => [...acc, ...val], [])\r\n  const melodyDrumFull = Array(parts)\r\n    .fill(melodyDrum)\r\n    .reduce((acc, val) => [...acc, ...val], [])\r\n  const melodyPartFull = Array(parts)\r\n    .fill(melodyPart)\r\n    .reduce((acc, val) => [...acc, ...val], [])\r\n\r\n  // const melodyPart = Array(size)\r\n  //   .fill(1)\r\n  //   .map(v => randomNoteObject(Scale, octave))\r\n  const melodyShuffled = Array(parts)\r\n    .fill(1)\r\n    .map(val => randomArrayShuffle(melodyPart))\r\n    .reduce((acc, val) => [...acc, ...randomArrayShuffle(melodyPart)], [])\r\n  const melodyDoubled = Array(parts)\r\n    .fill(1)\r\n    .reduce((acc, val) => [...acc, ...randomArrayElementDoubled(melodyPart)], [])\r\n\r\n  return {\r\n    mainNotes,\r\n    melodyBass: melodyBassFull,\r\n    melodyDrum: melodyDrumFull,\r\n    melodyPart: melodyPartFull\r\n  }\r\n  // return {\r\n  //   melodyBass,\r\n  //   melodyDrum,\r\n  //   melodyPart\r\n  // }\r\n  // return melodyPart\r\n  // return melodyShuffled\r\n  // return melodyDoubled\r\n}\r\nexport const getInstrument = ({ instrument }) => {\r\n  const synth = new Tone.PolySynth({ volume: 0 }).toDestination()\r\n  const drum = new Tone.PluckSynth({ volume: -5 }).toDestination()\r\n  const bass = new Tone.Synth({ volume: 0 }).toDestination()\r\n  return { synth, bass, drum }\r\n}\r\nexport const getTrack = ({ instrument, melody, transport }) => {\r\n  console.log('melody', melody)\r\n  const trackBass = new Tone.Sequence(\r\n    (time, { noteBass, duration, velocity }) => {\r\n      instrument.bass.triggerAttackRelease(noteBass, duration, time, velocity)\r\n    },\r\n    melody.melodyBass,\r\n    '4n'\r\n  ).set({ humanize: true, probability: 1, playbackRate: 1 })\r\n  const trackDrum = new Tone.Sequence(\r\n    (time, { noteDrum, duration, velocity }) => {\r\n      instrument.drum.triggerAttackRelease(noteDrum, duration, time, velocity)\r\n    },\r\n    melody.melodyDrum,\r\n    '4n'\r\n  ).set({ humanize: true, probability: 1, playbackRate: 1 })\r\n  const trackPart = new Tone.Sequence(\r\n    (time, { noteSynth, duration, velocity }) => {\r\n      instrument.synth.triggerAttackRelease(noteSynth, duration, time, velocity)\r\n    },\r\n    melody.melodyPart,\r\n    '4n'\r\n  ).set({ humanize: true, probability: 1, playbackRate: 1 })\r\n  const track = {\r\n    stop: (time = 0) => {\r\n      trackPart.stop(time)\r\n      trackBass.stop(time)\r\n      trackDrum.stop(time)\r\n    },\r\n    start: (time = 0) => {\r\n      trackPart.start(time)\r\n      trackBass.start(time)\r\n      trackDrum.start(time)\r\n    }\r\n  }\r\n\r\n  transport.set({ bpm: randomBpm() })\r\n\r\n  return track\r\n}\r\nexport const getTransport = () => Tone.Transport\r\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":12},{"ruleId":"114","severity":1,"message":"118","line":34,"column":28,"nodeType":"116","messageId":"117","endLine":34,"endColumn":39},{"ruleId":"114","severity":1,"message":"119","line":34,"column":41,"nodeType":"116","messageId":"117","endLine":34,"endColumn":53},{"ruleId":"114","severity":1,"message":"120","line":34,"column":69,"nodeType":"116","messageId":"117","endLine":34,"endColumn":80},{"ruleId":"121","severity":1,"message":"122","line":39,"column":29,"nodeType":"123","messageId":"124","endLine":39,"endColumn":31},{"ruleId":"110","replacedBy":"125"},{"ruleId":"112","replacedBy":"126"},{"ruleId":"110","replacedBy":"127"},{"ruleId":"112","replacedBy":"128"},{"ruleId":"110","replacedBy":"129"},{"ruleId":"112","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":57,"column":17,"nodeType":"133","messageId":"134","endLine":57,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":82,"column":51,"nodeType":"137","messageId":"138","endLine":84,"endColumn":12},{"ruleId":"131","severity":1,"message":"132","line":83,"column":30,"nodeType":"133","messageId":"134","endLine":83,"endColumn":32},{"ruleId":"135","severity":1,"message":"139","line":85,"column":28,"nodeType":"137","messageId":"138","endLine":87,"endColumn":12},{"ruleId":"131","severity":1,"message":"132","line":116,"column":28,"nodeType":"133","messageId":"134","endLine":116,"endColumn":30},{"ruleId":"114","severity":1,"message":"140","line":3,"column":13,"nodeType":"116","messageId":"117","endLine":3,"endColumn":27},{"ruleId":"114","severity":1,"message":"141","line":151,"column":9,"nodeType":"116","messageId":"117","endLine":151,"endColumn":23},{"ruleId":"114","severity":1,"message":"142","line":155,"column":9,"nodeType":"116","messageId":"117","endLine":155,"endColumn":22},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'View' is defined but never used.","Identifier","unusedVar","'figureWidth' is assigned a value but never used.","'figureHeight' is assigned a value but never used.","'notesColors' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["143"],["144"],["143"],["144"],["143"],["144"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'minBy'.","FunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'newT'.","'TotalSerializm' is defined but never used.","'melodyShuffled' is assigned a value but never used.","'melodyDoubled' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]